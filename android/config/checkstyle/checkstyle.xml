<?xml version="1.0"?><!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">


<module name="Checker">
    <property name="charset" value="UTF-8" />

    <!--<property name="severity" value="warning"/>-->

    <property name="fileExtensions" value="java, properties, xml" />

    <module name="SuppressionFilter">
        <property name="file" value="${suppressionFile}" default="suppressions.xml"/>
    </module>

    <!-- Checks for Headers                                -->
    <!-- See http://checkstyle.sf.net/config_header.html   -->
    <!-- <module name="Header"> -->
    <!--   <property name="headerFile" value="${config.quality.checkstyle.header.file}"/> -->
    <!--   <property name="fileExtensions" value="java"/> -->
    <!-- </module> -->

    <!-- Checks that a package-info.java file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->
    <!--<module name="JavadocPackage"/>-->

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile" />

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation" />

    <!-- Checks properties files for duplicated properties. -->
    <!-- See http://checkstyle.sourceforge.net/config_misc.html#UniqueProperties -->
    <module name="UniqueProperties" />

    <!-- See http://checkstyle.sourceforge.net/config_regexp.html -->

    <module name="RegexpSingleline">
        <property name="format" value="\s+$" />
        <property name="minimum" value="0" />
        <property name="maximum" value="0" />
        <property name="message" value="Line has trailing spaces." />
    </module>

    <!-- Space after 'for' and 'if' -->
    <module name="RegexpSingleline">
        <property name="format" value="^\s*(for|if)\b[^ ]" />
        <property name="message" value="Space needed before opening parenthesis." />
    </module>

    <!-- For each spacing -->
    <module name="RegexpSingleline">
        <property name="format" value="^\s*for \(.*?([^ ]:|:[^ ])" />
        <property name="message" value="Space needed around ':' character." />
    </module>

    <!-- C++ style inline comment is not allowed. -->
    <module name="RegexpSingleline">
        <property name="format" value="/\*.*\*/" />
        <property name="message" value="This kind of comment is not allowed." />
    </module>

    <!-- Two consecutive empty lines are not allowed. -->
    <module name="RegexpMultiline">
        <property name="format" value="\r?\n[ \t\x0B\f]*\r?\n[ \t\x0B\f]*\r?\n" />
        <property name="fileExtensions" value="java" />
        <property name="message" value="Two consecutive empty lines" />
    </module>

    <!-- JavaDoc regexp checks -->
    <module name="RegexpSingleline">
        <property name="format" value="\* +@return +[^A-Z]" />
        <property name="fileExtensions" value="java" />
        <property name="message" value="@return tag description should start with capital letter" />
    </module>
    <!-- Conflicts with javadoc Type information -->
    <!--<module name="RegexpSingleline">-->
    <!--<property name="format" value="\* +@param +\w+ +[^A-Z]"/>-->
    <!--<property name="fileExtensions" value="java"/>-->
    <!--<property name="message" value="@param tag description should start with capital letter"/>-->
    <!--</module>-->
    <module name="RegexpSingleline">
        <property name="format" value="/\*\* +[^A-Z\{]" />
        <property name="fileExtensions" value="java" />
        <property name="message"
            value="First sentence in a comment should start with a capital letter" />
    </module>
    <module name="RegexpMultiline">
        <property name="format" value="/\*\*\W+\* +[^A-Z\{]" />
        <property name="fileExtensions" value="java" />
        <property name="message"
            value="First sentence in a comment should start with a capital letter" />
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="synchronized +\(this\) +\{" />
        <property name="fileExtensions" value="java" />
        <property name="message"
            value="Using THIS as a lock is a bad practice (use class variable instead)" />
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="synchronized +\([\w\.]\.class\) +\{" />
        <property name="fileExtensions" value="java" />
        <property name="message"
            value="Using class as a lock is a bad practice (use class variable instead)" />
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="org\.apache\.commons\.(codec|lang3?)\.CharEncoding" />
        <property name="fileExtensions" value="java" />
        <property name="message" value="Use 'java.nio.charset.StandardCharsets' instead" />
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="^(?! *(/\*\*|\*|//)).*[\.\-\+%/\*&lt;&gt;] *$" />
        <property name="fileExtensions" value="java" />
        <property name="message"
            value="Line cannot end with this symbol, move it to the next line" />
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="^ *=" />
        <property name="fileExtensions" value="java" />
        <property name="message"
            value="Line cannot start with this symbol, move it to the previous line" />
    </module>

    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="FileLength">
        <property name="max" value="500" />
    </module>


    <!-- TAB chars are not allowed anywhere. -->
    <!-- See http://checkstyle.sourceforge.net/config_whitespace.html#FileTabCharacter -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true" />
        <property name="fileExtensions"
            value="java,txt,xml,xsl,xsd,properties,groovy,vm,MF,sh,sql,tokens,g,spec,css,csv" />
    </module>

    <module name="TreeWalker">

        <!-- http://checkstyle.sourceforge.net/config_annotation.html -->

        <module name="AnnotationLocation">
            <property name="allowSamelineMultipleAnnotations" value="false" />
            <property name="allowSamelineSingleParameterlessAnnotation" value="false" />
            <property name="allowSamelineParameterizedAnnotation" value="false" />
        </module>

        <module name="AnnotationUseStyle" />
        <module name="MissingDeprecated" />
        <module name="MissingOverride" />
        <!--<module name="PackageAnnotation"/>-->
        <module name="SuppressWarnings" />
        <module name="SuppressWarningsHolder" />


        <!-- See http://checkstyle.sf.net/config_blocks.html -->

        <!-- Doesn't work -->
        <!--<module name="AvoidNestedBlocks">-->
        <!--<property name="allowInSwitchCase" value="true"/>-->
        <!--</module>-->

        <module name="EmptyBlock" />
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="expected" />
        </module>
        <module name="LeftCurly" />
        <module name="NeedBraces" />
        <module name="RightCurly" />


        <!-- See http://checkstyle.sf.net/config_design.html -->

        <!-- Should be discussed -->
        <!--<module name="DesignForExtension"/>-->
        <module name="FinalClass" />
        <module name="HideUtilityClassConstructor" />
        <module name="InnerTypeLast" />
        <module name="InterfaceIsType" />
        <module name="MutableException" />
        <module name="OneTopLevelClass" />
        <!-- Should be discussed -->
        <module name="ThrowsCount" />
        <!-- Should be discussed -->
        <!--<module name="VisibilityModifier">-->
        <!--<property name="packageAllowed" value="true"/>-->
        <!--<property name="protectedAllowed" value="true"/>-->
        <!--</module>-->


        <!-- See http://checkstyle.sf.net/config_coding.html -->

        <!-- Haven't figured out how it works -->
        <module name="ArrayTrailingComma" />
        <!-- Should be discussed. Prevents ternary operator, not sure -->
        <!--<module name="AvoidInlineConditionals"/> -->
        <module name="CovariantEquals" />
        <module name="DeclarationOrder" />
        <module name="DefaultComesLast" />
        <module name="EmptyStatement" />
        <module name="EqualsAvoidNull" />
        <module name="EqualsHashCode" />
        <module name="ExplicitInitialization" />
        <module name="FallThrough">
            <message key="fall.through"
                value="Fall through from previous branch of the switch statement. If it suites you, add comment with regexp ''fallthru|falls? ?through'' " />
            <message key="fall.through.last"
                value="Fall through from the last branch of the switch statement. If it suites you, add comment with regexp ''fallthru|falls? ?through'' " />
        </module>
        <module name="FinalLocalVariable" />
        <!-- Should be discussed. Doesn't work for simple setters, builders -->
        <!--<module name="HiddenField"/>-->
        <!-- Catching java.lang.Exception, java.lang.Error or java.lang.RuntimeException is almost never acceptable. !-->
        <module name="IllegalCatch">
            <property name="illegalClassNames"
                value="java.lang.Throwable, java.lang.RuntimeException" />
        </module>
        <module name="IllegalInstantiation" />
        <module name="IllegalThrows" />
        <module name="IllegalToken" />
        <module name="IllegalTokenText">
            <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL" />
            <property name="format"
                value="\\u00(08|09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)" />
            <property name="message" value="Avoid using corresponding octal or Unicode escape." />
        </module>
        <module name="IllegalType" />
        <module name="InnerAssignment" />
        <module name="MagicNumber">
            <property name="ignoreHashCodeMethod" value="true" />
        </module>
        <!--<module name="MissingCtor"/>-->
        <module name="MissingSwitchDefault" />
        <module name="ModifiedControlVariable" />
        <!-- Should be discussed. Temporary disabled, it highlights logs too-->
        <!--<module name="MultipleStringLiterals">-->
        <!--<property name="ignoreStringsRegexp" value='^(("")|(", "))$'/>-->
        <!--</module>-->
        <module name="MultipleVariableDeclarations" />
        <module name="NestedForDepth" />
        <module name="NestedIfDepth" />
        <module name="NestedTryDepth" />
        <module name="NoClone" />
        <!-- ? -->
        <module name="NoFinalizer" />
        <module name="OneStatementPerLine" />
        <module name="OverloadMethodsDeclarationOrder" />
        <module name="PackageDeclaration" />
        <module name="ParameterAssignment" />
        <module name="RequireThis" />
        <module name="ReturnCount">
            <property name="max" value="1" />
        </module>
        <module name="SimplifyBooleanExpression" />
        <module name="SimplifyBooleanReturn" />
        <module name="StringLiteralEquality" />
        <module name="SuperClone" />
        <module name="SuperFinalize" />
        <module name="UnnecessaryParentheses" />
        <!-- ? -->
        <module name="VariableDeclarationUsageDistance" />


        <!-- See http://checkstyle.sf.net/config_import.html -->

        <module name="AvoidStarImport" />
        <module name="AvoidStaticImport" />
        <!--<module name="CustomImportOrder">-->
        <!--<property name="customImportOrderRules"-->
        <!--value="THIRD_PARTY_PACKAGE###SPECIAL_IMPORTS###STANDARD_JAVA_PACKAGE###STATIC"/>-->
        <!--<property name="specialImportsRegExp" value="^javax\."/>-->
        <!--<property name="standardPackageRegExp" value="^java\."/>-->
        <!--<property name="sortImportsInGroupAlphabetically" value="true"/>-->
        <!--<property name="separateLineBetweenGroups" value="false"/>-->
        <!--</module>-->
        <!--<module name="ImportControl"/>-->
        <module name="IllegalImport" />
        <module name="RedundantImport" />
        <module name="UnusedImports">
            <property name="processJavadoc" value="true" />
        </module>


        <!-- See http://checkstyle.sf.net/config_javadoc.html -->

        <module name="AtclauseOrder">
            <property name="tagOrder" value="@author, @version, @param, @return,
                @throws, @exception, @see, @since, @serial, @serialField,
                @serialData, @deprecated, @todo, @checkstyle" />
            <property name="target"
                value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF" />
        </module>
        <module name="JavadocMethod">
            <property name="tokens" value="METHOD_DEF,ANNOTATION_FIELD_DEF" />
            <property name="excludeScope" value="private" />
        </module>
        <module name="JavadocParagraph">
            <property name="allowNewlineParagraph" value="false" />
        </module>
        <module name="JavadocStyle">
            <property name="checkEmptyJavadoc" value="true" />
        </module>
        <module name="JavadocTagContinuationIndentation" />
        <module name="JavadocType">
            <property name="allowUnknownTags" value="true" />
        </module>
        <module name="JavadocVariable">
            <property name="scope" value="package" />
        </module>
        <module name="NonEmptyAtclauseDescription" />
        <module name="SingleLineJavadoc">
            <property name="ignoreInlineTags" value="false" />
        </module>
        <module name="SummaryJavadoc">
            <property name="forbiddenSummaryFragments"
                value="^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )" />
        </module>
        <module name="WriteTag" />


        <!-- See http://checkstyle.sourceforge.net/config_metrics.html -->

        <!-- Should be discussed -->
        <module name="BooleanExpressionComplexity" />
        <module name="ClassDataAbstractionCoupling">
            <property name="max" value="10" />
        </module>
        <module name="ClassFanOutComplexity">
            <!--
            Total number of classes that a particular class
            depends on. We're increasing this value because
            default "20" is too low.
            -->
            <property name="max" value="30" />
        </module>
        <module name="CyclomaticComplexity" />
        <module name="NPathComplexity" />
        <module name="JavaNCSS" />


        <!-- See http://checkstyle.sf.net/config_misc.html -->

        <module name="ArrayTypeStyle" />
        <!-- Should be discussed. Not sure and conflicts with TrailingComment -->
        <!--<module name="AvoidEscapedUnicodeCharacters">-->
        <!--<property name="allowEscapesForControlCharacters" value="true"/>-->
        <!--<property name="allowByTailComment" value="true"/>-->
        <!--<property name="allowNonPrintableEscapes" value="true"/>-->
        <!--<property name="allowIfAllCharactersEscaped" value="true"/>-->
        <!--</module>-->
        <module name="CommentsIndentation" />
        <!--<module name="DescendantToken"/>-->
        <!--<module name="FileContentsHolder"/>-->
        <module name="FinalParameters" />
        <module name="Indentation">
            <property name="basicOffset" value="4" />
            <property name="braceAdjustment" value="0" />
            <property name="caseIndent" value="4" />
            <property name="throwsIndent" value="4" />
            <property name="lineWrappingIndentation" value="4" />
        </module>
        <module name="OuterTypeFilename" />
        <module name="TodoComment" />
        <module name="TrailingComment" />
        <module name="UncommentedMain" />
        <module name="UpperEll" />


        <!-- See http://checkstyle.sf.net/config_modifiers.html -->

        <module name="ModifierOrder" />
        <module name="RedundantModifier" />

        <!-- See http://checkstyle.sf.net/config_naming.html -->

        <module name="AbbreviationAsWordInName">
            <property name="allowedAbbreviations" value="IT|UUID" />
        </module>
        <module name="AbstractClassName">
            <property name="format" value="^Abstract.*$|^Base.*$" />
        </module>
        <!-- Should be reconsidered -->
        <module name="CatchParameterName">
            <property name="format" value="^(e|t|ex|[a-z][a-z][a-zA-Z]+)$" />
            <!--<property name="format" value="^(ex|[a-z]{3,12})$"/>-->
            <!--<property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>-->
            <message key="name.invalidPattern"
                value="Catch parameter name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="ClassTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
            <message key="name.invalidPattern"
                value="Class type name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="ConstantName">
            <property name="format" value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$" />
        </module>
        <module name="InterfaceTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
            <message key="name.invalidPattern"
                value="Interface type name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="LocalFinalVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$" />
        </module>
        <module name="LocalVariableName">
            <!--<property name="format" value="^[a-z]([_a-zA-Z0-9]+)*$"/>-->
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$" />
            <property name="allowOneCharVarInForLoop" value="true" />
            <message key="name.invalidPattern"
                value="Local variable name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="LocalVariableName">
            <property name="format" value="^(id|[a-zA-Z0-9]{3,20})$" />
        </module>
        <module name="MemberName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$" />
            <!--<property name="format" value="^_?[a-z][a-zA-Z0-9]*$"/>-->
            <!--<property name="format" value="^(id|[a-z]{3,12})$"/>-->
            <!--<property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>-->
            <message key="name.invalidPattern"
                value="Member name ''{0}'' must match pattern ''{1}''." />
        </module>

        <module name="MethodName">
            <!--<property name="format" value="^[a-z]([_a-zA-Z0-9]+)*$"/>-->
            <!--<property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>-->
            <!--<property name="format" value="^[a-z]{2,}[a-zA-Z]+$"/>-->
            <!--<property name="format" value="^[a-z][a-zA-Z0-9_]*$"/>-->
            <property name="format" value="^[a-z][a-zA-Z0-9]*$" />
            <message key="name.invalidPattern"
                value="Method name ''{0}'' must match pattern ''{1}''." />
        </module>

        <module name="MethodTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
            <message key="name.invalidPattern"
                value="Method type name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$" />
            <message key="name.invalidPattern"
                value="Package name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="ParameterName">
            <!--<property name="format" value="^[a-z]([_a-zA-Z0-9]+)*$"/>-->
            <property name="id" value="ParameterNameNonPublic" />
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$" />
            <property name="excludeScope" value="public" />
            <message key="name.invalidPattern"
                value="Parameter name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="ParameterName">
            <property name="id" value="ParameterNamePublic" />
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$" />
            <property name="scope" value="public" />
            <message key="name.invalidPattern"
                value="Parameter name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="StaticVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$" />
        </module>
        <module name="TypeName">
            <!--<property name="format" value="^[A-Z][_a-zA-Z0-9]*$"/>-->
            <property name="format" value="^[A-Z][a-zA-Z0-9]*$" />
            <message key="name.invalidPattern"
                value="Type name ''{0}'' must match pattern ''{1}''." />

            <!-- Interface Name Prefix I... -->
            <!--<property name="format" value="^I_[a-zA-Z0-9]*$"/>-->
            <!--<property name="tokens" value="INTERFACE_DEF"/>-->
        </module>


        <!-- See http://checkstyle.sf.net/config_sizes.html -->

        <module name="AnonInnerLength">
            <property name="max" value="20" />
        </module>
        <module name="ExecutableStatementCount">
            <property name="max" value="20" />
        </module>
        <module name="LineLength">
            <property name="max" value="130" />
            <property name="ignorePattern"
                value="^package.*|^import.*|a href|href|http://|https://|ftp://" />
        </module>
        <module name="MethodCount" />
        <module name="MethodLength" />
        <module name="OuterTypeNumber" />
        <module name="ParameterNumber">
            <property name="max" value="7" />
            <property name="tokens" value="CTOR_DEF" />
        </module>
        <module name="ParameterNumber">
            <property name="max" value="4" />
            <property name="tokens" value="METHOD_DEF" />
        </module>


        <!-- See http://checkstyle.sf.net/config_whitespace.html -->

        <module name="EmptyForInitializerPad" />
        <module name="EmptyForIteratorPad" />
        <module name="EmptyLineSeparator">
            <!-- Can be discussed -->
            <property name="allowNoEmptyLineBetweenFields" value="true" />
            <property name="allowMultipleEmptyLinesInsideClassMembers" value="false" />
        </module>
        <module name="GenericWhitespace" />
        <module name="GenericWhitespace">
            <message key="ws.followed"
                value="GenericWhitespace ''{0}'' is followed by whitespace." />
            <message key="ws.preceded"
                value="GenericWhitespace ''{0}'' is preceded with whitespace." />
            <message key="ws.illegalFollow"
                value="GenericWhitespace ''{0}'' should followed by whitespace." />
            <message key="ws.notPreceded"
                value="GenericWhitespace ''{0}'' is not preceded with whitespace." />
        </module>
        <module name="MethodParamPad" />
        <module name="NoLineWrap" />
        <module name="NoWhitespaceAfter" />
        <module name="NoWhitespaceBefore" />
        <module name="OperatorWrap">
            <property name="option" value="NL" />
            <property name="tokens"
                value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF " />
        </module>
        <module name="ParenPad" />
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapDot" />
            <property name="tokens" value="DOT" />
            <property name="option" value="nl" />
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapComma" />
            <property name="tokens" value="COMMA" />
            <property name="option" value="EOL" />
        </module>
        <module name="SingleSpaceSeparator" />
        <module name="TypecastParenPad" />
        <module name="WhitespaceAfter" />
        <module name="WhitespaceAround">
            <property name="allowEmptyConstructors" value="true" />
            <property name="allowEmptyMethods" value="true" />
            <property name="allowEmptyTypes" value="true" />
            <property name="allowEmptyLoops" value="true" />
            <message key="ws.notFollowed"
                value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)" />
            <message key="ws.notPreceded"
                value="WhitespaceAround: ''{0}'' is not preceded with whitespace." />
        </module>

    </module>


</module>