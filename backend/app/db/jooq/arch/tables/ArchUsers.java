/*
 * This file is generated by jOOQ.
*/
package db.jooq.arch.tables;


import db.jooq.arch.Indexes;
import db.jooq.arch.Keys;
import db.jooq.arch.Public;
import db.jooq.arch.tables.records.ArchUsersRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArchUsers extends TableImpl<ArchUsersRecord> {

    private static final long serialVersionUID = -570585182;

    /**
     * The reference instance of <code>public.arch_users</code>
     */
    public static final ArchUsers ARCH_USERS = new ArchUsers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ArchUsersRecord> getRecordType() {
        return ArchUsersRecord.class;
    }

    /**
     * The column <code>public.arch_users.id</code>.
     */
    public final TableField<ArchUsersRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('arch_users_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.arch_users.name</code>.
     */
    public final TableField<ArchUsersRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.arch_users.push_token</code>.
     */
    public final TableField<ArchUsersRecord, String> PUSH_TOKEN = createField("push_token", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>public.arch_users</code> table reference
     */
    public ArchUsers() {
        this(DSL.name("arch_users"), null);
    }

    /**
     * Create an aliased <code>public.arch_users</code> table reference
     */
    public ArchUsers(String alias) {
        this(DSL.name(alias), ARCH_USERS);
    }

    /**
     * Create an aliased <code>public.arch_users</code> table reference
     */
    public ArchUsers(Name alias) {
        this(alias, ARCH_USERS);
    }

    private ArchUsers(Name alias, Table<ArchUsersRecord> aliased) {
        this(alias, aliased, null);
    }

    private ArchUsers(Name alias, Table<ArchUsersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ARCH_USERS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ArchUsersRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ARCH_USERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ArchUsersRecord> getPrimaryKey() {
        return Keys.ARCH_USERS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ArchUsersRecord>> getKeys() {
        return Arrays.<UniqueKey<ArchUsersRecord>>asList(Keys.ARCH_USERS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArchUsers as(String alias) {
        return new ArchUsers(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArchUsers as(Name alias) {
        return new ArchUsers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ArchUsers rename(String name) {
        return new ArchUsers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ArchUsers rename(Name name) {
        return new ArchUsers(name, null);
    }
}
